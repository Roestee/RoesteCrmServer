// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoesteCrmServer.Infrastructure.Context;

#nullable disable

namespace RoesteCrmServer.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241021231838_LeadInit")]
    partial class LeadInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e33a6edc-907d-484a-9c73-6a37dd649da0"),
                            Name = "Agriculture"
                        },
                        new
                        {
                            Id = new Guid("3c59329b-fa3a-4d4a-84a5-45b5351aca04"),
                            Name = "Apparel"
                        },
                        new
                        {
                            Id = new Guid("781ae817-7397-4230-8509-fefaf555f51a"),
                            Name = "Banking"
                        },
                        new
                        {
                            Id = new Guid("7f96713d-d26e-4ae8-86f7-80a77bba622d"),
                            Name = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("4ba02537-65bf-4d71-b2c8-d894d5341a22"),
                            Name = "Chemicals"
                        },
                        new
                        {
                            Id = new Guid("95ee58c6-9a08-4823-a0af-a73428159378"),
                            Name = "Communications"
                        },
                        new
                        {
                            Id = new Guid("43030c13-edd0-4251-873b-779c7357097a"),
                            Name = "Construction"
                        },
                        new
                        {
                            Id = new Guid("50a17bd5-e724-4a3f-ada5-912acedd7122"),
                            Name = "Consulting"
                        },
                        new
                        {
                            Id = new Guid("ca99b823-e0e3-4f93-bef6-68ddbcd2b277"),
                            Name = "Education"
                        },
                        new
                        {
                            Id = new Guid("89e85581-a52e-44aa-b228-354c37c7707c"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("99b35359-5150-4e78-acfd-ae492ca444e5"),
                            Name = "Energy"
                        },
                        new
                        {
                            Id = new Guid("1736c514-3b4a-4bbc-b71f-67c6e1e448da"),
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = new Guid("719cf6d5-caf8-4082-830c-045e9831c362"),
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = new Guid("88fcd659-40cd-492b-8f9e-24e0237a418d"),
                            Name = "Environmental"
                        },
                        new
                        {
                            Id = new Guid("9db8af00-06bc-4575-b037-05e73e450313"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("1b58b007-1199-4e7f-8669-1ab06228ddce"),
                            Name = "Food & Beverage"
                        },
                        new
                        {
                            Id = new Guid("79638029-614d-4602-b871-bf8559f8ad83"),
                            Name = "Government"
                        },
                        new
                        {
                            Id = new Guid("e0eb6f50-276d-401f-a97b-9c729bfa9e18"),
                            Name = "Healthcare"
                        },
                        new
                        {
                            Id = new Guid("85334148-6090-4bca-babb-fe67a30b6f10"),
                            Name = "Hospitality"
                        },
                        new
                        {
                            Id = new Guid("390f0ac0-6749-48bb-9ea2-c2e5cec568e3"),
                            Name = "Insurance"
                        },
                        new
                        {
                            Id = new Guid("286b3011-7fa9-47af-8f43-52b575349ee7"),
                            Name = "Machinery"
                        },
                        new
                        {
                            Id = new Guid("5f6cf9bc-7363-4f17-b652-8ed6fc965740"),
                            Name = "Manufacturing"
                        },
                        new
                        {
                            Id = new Guid("83c44135-6610-4a1b-87d6-d652dc2898e0"),
                            Name = "Media"
                        },
                        new
                        {
                            Id = new Guid("fb92e268-f593-4369-ae77-91dca23a049e"),
                            Name = "Not for Profit"
                        },
                        new
                        {
                            Id = new Guid("a4ee8b81-9166-40ae-a5d8-5f2a8f78b4c5"),
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("63ccd6eb-d7f8-4792-955f-837cf0a7b0bb"),
                            Name = "Recreation"
                        },
                        new
                        {
                            Id = new Guid("9abdb070-6150-42e2-a45d-342f56f7c8ef"),
                            Name = "Retail"
                        },
                        new
                        {
                            Id = new Guid("0507fae1-c1b1-4478-88f8-df0fbd1bf8ef"),
                            Name = "Shipping"
                        },
                        new
                        {
                            Id = new Guid("a9e6fee0-a3f8-4552-bb87-fe9e2a886e67"),
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("3e9c5c5f-d84a-4731-9594-1680f06e1166"),
                            Name = "Telecommunication"
                        },
                        new
                        {
                            Id = new Guid("20f31118-a366-4ae8-a31c-104b160fa63c"),
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = new Guid("5cb42cff-f71c-419e-8e1e-10acddb0bc67"),
                            Name = "Utilities"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Lead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("EmailAddress", true);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LeadOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalutationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LeadOwnerId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LeadStatusId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("RatingId");

                    b.HasIndex("SalutationId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.LeadSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LeadSources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b73042c-637b-47da-a2f9-f3b20cfb6698"),
                            Name = "Advertisement"
                        },
                        new
                        {
                            Id = new Guid("fe79907d-3dc5-4677-a0e5-c6932d962a16"),
                            Name = "Employee Referral"
                        },
                        new
                        {
                            Id = new Guid("7677ad66-88bb-4a8c-8ae9-e8e24d3f9479"),
                            Name = "External Referral"
                        },
                        new
                        {
                            Id = new Guid("1cc52f8c-58aa-4b5d-8212-d946f1415ff7"),
                            Name = "In-Store"
                        },
                        new
                        {
                            Id = new Guid("6de53434-f3f1-45b7-b06c-6de09ce244ae"),
                            Name = "On Site"
                        },
                        new
                        {
                            Id = new Guid("598fb990-d81c-49fc-b1bf-c3709e25ddcc"),
                            Name = "Social"
                        },
                        new
                        {
                            Id = new Guid("bb2c07e1-1ab9-477b-8e09-076238be692c"),
                            Name = "Trade Show"
                        },
                        new
                        {
                            Id = new Guid("0ff10d40-715b-42c6-86d3-62116341b566"),
                            Name = "Web"
                        },
                        new
                        {
                            Id = new Guid("b3b428b8-e94a-4caf-8736-5a5d2fc134d9"),
                            Name = "Word of mouth"
                        },
                        new
                        {
                            Id = new Guid("b098b4be-b8be-4cb1-85df-a171ae824043"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.LeadStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("LeadStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5ba25b1-d969-4da8-a82c-2568031ccfa1"),
                            Name = "New"
                        },
                        new
                        {
                            Id = new Guid("28c682d8-4c49-41a1-be7d-f174187dd3c9"),
                            Name = "Contacted"
                        },
                        new
                        {
                            Id = new Guid("303158c5-0e2f-49ce-b320-6861d51a3bb0"),
                            Name = "Working"
                        },
                        new
                        {
                            Id = new Guid("2b875be9-d1ac-46ea-8485-721618a790c2"),
                            Name = "Qualified"
                        },
                        new
                        {
                            Id = new Guid("e30973a3-1687-4542-960f-91f06ac526e4"),
                            Name = "Unqualified"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51fbe2ea-4163-4e8d-b2a1-0c0bed279970"),
                            Name = "Hot"
                        },
                        new
                        {
                            Id = new Guid("4e9be0fb-ee13-461a-a8b9-78f81e957009"),
                            Name = "Warm"
                        },
                        new
                        {
                            Id = new Guid("6a6b9f80-5bd0-4fd4-a6eb-f44749b8f2ca"),
                            Name = "Cold"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Salutation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Salutations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9061add-ae2d-43e0-b89f-658b00bd436f"),
                            Name = "Mr."
                        },
                        new
                        {
                            Id = new Guid("97250d3f-a8f0-4e3d-9b91-c80481106318"),
                            Name = "Ms."
                        },
                        new
                        {
                            Id = new Guid("2aebf220-207f-4644-be68-4af5ce05223a"),
                            Name = "Mrs."
                        },
                        new
                        {
                            Id = new Guid("40dd5c59-4a78-4d50-95ce-5ab08718ac4b"),
                            Name = "Dr."
                        },
                        new
                        {
                            Id = new Guid("d6475c72-1366-4a95-8230-97ed4e6fc4e4"),
                            Name = "Prof."
                        },
                        new
                        {
                            Id = new Guid("260ff029-bce2-453f-93e6-8b2a02e0f24b"),
                            Name = "Mx."
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Lead", b =>
                {
                    b.HasOne("RoesteCrmServer.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "LeadOwner")
                        .WithMany("Leads")
                        .HasForeignKey("LeadOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.LeadSource", "LeadSource")
                        .WithMany()
                        .HasForeignKey("LeadSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.LeadStatus", "LeadStatus")
                        .WithMany()
                        .HasForeignKey("LeadStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Salutation", "Salutation")
                        .WithMany()
                        .HasForeignKey("SalutationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CreatedBy");

                    b.Navigation("Industry");

                    b.Navigation("LeadOwner");

                    b.Navigation("LeadSource");

                    b.Navigation("LeadStatus");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Rating");

                    b.Navigation("Salutation");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Leads");
                });
#pragma warning restore 612, 618
        }
    }
}
