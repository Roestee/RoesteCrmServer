// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoesteCrmServer.Infrastructure.Context;

#nullable disable

namespace RoesteCrmServer.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241022180646_addressesTableUpdate")]
    partial class addressesTableUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4c32ade-549a-4977-a9ed-fd89264edc36"),
                            Name = "Agriculture"
                        },
                        new
                        {
                            Id = new Guid("df2523b4-4e08-4423-bed3-13ff664a80b6"),
                            Name = "Apparel"
                        },
                        new
                        {
                            Id = new Guid("5a622a3a-9947-4c2e-9a9d-6c97a3ee16dd"),
                            Name = "Banking"
                        },
                        new
                        {
                            Id = new Guid("82cbad40-a744-4681-87e4-664490eb3712"),
                            Name = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("b3ead564-1ae6-4f54-acb8-ae1654724955"),
                            Name = "Chemicals"
                        },
                        new
                        {
                            Id = new Guid("2a5a9359-5aa6-4fc9-9327-c1fedfe0e234"),
                            Name = "Communications"
                        },
                        new
                        {
                            Id = new Guid("f34e0985-59b7-4a57-941a-93db7c735e86"),
                            Name = "Construction"
                        },
                        new
                        {
                            Id = new Guid("c1691fe7-5294-49c7-b5d8-40214bb3df67"),
                            Name = "Consulting"
                        },
                        new
                        {
                            Id = new Guid("25ccd386-0439-45cd-b947-5796fe7d3154"),
                            Name = "Education"
                        },
                        new
                        {
                            Id = new Guid("328d24df-d9a7-4e73-acc5-0719ff4402e6"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("897d9603-9e27-4c87-adde-02fddb0eca2d"),
                            Name = "Energy"
                        },
                        new
                        {
                            Id = new Guid("0918f93f-9468-47f6-bdf4-c0bebf1576cc"),
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = new Guid("cd90bba0-50d3-4b0d-8dde-5444cf09e1c0"),
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = new Guid("691f451b-6025-46f3-9363-571f4619bbf1"),
                            Name = "Environmental"
                        },
                        new
                        {
                            Id = new Guid("1b39e82d-7ee1-403b-abf5-2b47818321df"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("67fd1340-b8fb-49bd-a073-22578a9b42a5"),
                            Name = "Food & Beverage"
                        },
                        new
                        {
                            Id = new Guid("e75c08f2-6208-4162-a64b-4fa5e38a9879"),
                            Name = "Government"
                        },
                        new
                        {
                            Id = new Guid("925e6145-dc2f-47eb-9066-846edd526b31"),
                            Name = "Healthcare"
                        },
                        new
                        {
                            Id = new Guid("ff66e108-c625-4478-9893-d6e7caeeeeba"),
                            Name = "Hospitality"
                        },
                        new
                        {
                            Id = new Guid("c2d7e0a2-d645-4ece-9a07-dc4fe39d87e5"),
                            Name = "Insurance"
                        },
                        new
                        {
                            Id = new Guid("dd46b5aa-7a93-45b2-9b39-9bdd32e7e561"),
                            Name = "Machinery"
                        },
                        new
                        {
                            Id = new Guid("10a11d8b-beb5-41f6-8f9d-70ecde82ff97"),
                            Name = "Manufacturing"
                        },
                        new
                        {
                            Id = new Guid("b40588e6-55c6-4b1f-a6b1-2c79b4cc06fd"),
                            Name = "Media"
                        },
                        new
                        {
                            Id = new Guid("5176836a-c2f7-49d5-9933-9d4eabdacf03"),
                            Name = "Not for Profit"
                        },
                        new
                        {
                            Id = new Guid("ace50cd1-00a8-43e7-bf94-ea8a7d7d44d9"),
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("91839b2e-9c4e-46a0-8fb3-b88b4421e059"),
                            Name = "Recreation"
                        },
                        new
                        {
                            Id = new Guid("980337ad-0be3-4b14-ba53-465d645f460c"),
                            Name = "Retail"
                        },
                        new
                        {
                            Id = new Guid("329ce819-8ca7-4e4e-af81-2fbb6a2cd32e"),
                            Name = "Shipping"
                        },
                        new
                        {
                            Id = new Guid("52f54eae-ebe3-493b-8f87-bd26fb4648b4"),
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("ea994701-b77e-45cf-adff-e088b5f9da76"),
                            Name = "Telecommunication"
                        },
                        new
                        {
                            Id = new Guid("2e1b5c0b-b4de-4121-810b-0ca80cb58513"),
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = new Guid("c2775b58-bf02-4e67-ab07-7edbff99cf04"),
                            Name = "Utilities"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Lead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("EmailAddress", true);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LeadOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalutationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LeadOwnerId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LeadStatusId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("RatingId");

                    b.HasIndex("SalutationId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.LeadSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LeadSources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b302ae6a-36e8-47f5-851f-c6498b91963e"),
                            Name = "Advertisement"
                        },
                        new
                        {
                            Id = new Guid("35ceb4e3-db70-41ce-af41-b212edcc6f54"),
                            Name = "Employee Referral"
                        },
                        new
                        {
                            Id = new Guid("e3e35567-e84e-4bf6-950b-9f723996c5e0"),
                            Name = "External Referral"
                        },
                        new
                        {
                            Id = new Guid("702ac248-8a94-4a72-9291-3b2e67df9936"),
                            Name = "In-Store"
                        },
                        new
                        {
                            Id = new Guid("3c832ac3-8ff6-45d7-8735-69ed6b12056d"),
                            Name = "On Site"
                        },
                        new
                        {
                            Id = new Guid("46681669-5380-4b8f-be6e-6838a1f32f15"),
                            Name = "Social"
                        },
                        new
                        {
                            Id = new Guid("ac02785d-42f1-41b5-b055-fc163df5653f"),
                            Name = "Trade Show"
                        },
                        new
                        {
                            Id = new Guid("f58e0d5a-8efd-442b-a269-67f27f01958b"),
                            Name = "Web"
                        },
                        new
                        {
                            Id = new Guid("3fc537c9-0472-4e7f-b5d4-f3871d12e4c6"),
                            Name = "Word of mouth"
                        },
                        new
                        {
                            Id = new Guid("213a06d8-fee4-4dee-afbe-0b7f09ce4a3b"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.LeadStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("LeadStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a135a636-44cc-44aa-9fbc-31aa0e9698a0"),
                            Name = "New"
                        },
                        new
                        {
                            Id = new Guid("f31583f5-ab48-4b20-a205-4ee9af01158a"),
                            Name = "Contacted"
                        },
                        new
                        {
                            Id = new Guid("d26c09f3-9b82-474b-978c-9b5ca1fb3b5c"),
                            Name = "Working"
                        },
                        new
                        {
                            Id = new Guid("e66fb877-b8f5-4e36-951b-bea6d88666ab"),
                            Name = "Qualified"
                        },
                        new
                        {
                            Id = new Guid("693e0435-b5ce-4d82-9945-ce5084da261c"),
                            Name = "Unqualified"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c77543e8-cae4-4fb8-a893-2f6ef8a3d093"),
                            Name = "Hot"
                        },
                        new
                        {
                            Id = new Guid("47c23a83-1ab3-4223-900e-3d4463af6a0b"),
                            Name = "Warm"
                        },
                        new
                        {
                            Id = new Guid("a03c6bbb-aa71-41e3-a6bd-3803f65bc301"),
                            Name = "Cold"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Salutation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Salutations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6eddae50-a6f9-4fc3-88a8-9ee2ffd7e9cd"),
                            Name = "Mr."
                        },
                        new
                        {
                            Id = new Guid("aed1a9d9-ea6a-4edf-9011-bba295ec4061"),
                            Name = "Ms."
                        },
                        new
                        {
                            Id = new Guid("fa94b6c8-1c8d-4215-b48e-fe7fa78bd549"),
                            Name = "Mrs."
                        },
                        new
                        {
                            Id = new Guid("5fc53a75-896d-4e63-87fc-acae76a2e0b8"),
                            Name = "Dr."
                        },
                        new
                        {
                            Id = new Guid("da3f58b6-ceae-49e1-8921-e20fc973d01f"),
                            Name = "Prof."
                        },
                        new
                        {
                            Id = new Guid("c5ebe50e-b21e-46b8-adac-ec77f49522c3"),
                            Name = "Mx."
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Lead", b =>
                {
                    b.HasOne("RoesteCrmServer.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "LeadOwner")
                        .WithMany("Leads")
                        .HasForeignKey("LeadOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.LeadSource", "LeadSource")
                        .WithMany()
                        .HasForeignKey("LeadSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.LeadStatus", "LeadStatus")
                        .WithMany()
                        .HasForeignKey("LeadStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Salutation", "Salutation")
                        .WithMany()
                        .HasForeignKey("SalutationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CreatedBy");

                    b.Navigation("Industry");

                    b.Navigation("LeadOwner");

                    b.Navigation("LeadSource");

                    b.Navigation("LeadStatus");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Rating");

                    b.Navigation("Salutation");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Leads");
                });
#pragma warning restore 612, 618
        }
    }
}
