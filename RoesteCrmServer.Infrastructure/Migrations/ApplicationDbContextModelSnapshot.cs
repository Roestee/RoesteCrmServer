// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoesteCrmServer.Infrastructure.Context;

#nullable disable

namespace RoesteCrmServer.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d247949a-5115-44bd-ab16-dd398449dd41"),
                            Name = "Agriculture"
                        },
                        new
                        {
                            Id = new Guid("4353b13e-5dc3-4298-9b53-297fb50bc3bb"),
                            Name = "Apparel"
                        },
                        new
                        {
                            Id = new Guid("2077dc54-270e-447e-add6-f96aec57c3b6"),
                            Name = "Banking"
                        },
                        new
                        {
                            Id = new Guid("661110ac-f047-4fe0-a5a7-8ccf481b82f2"),
                            Name = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("06bac37c-10ce-47e6-988f-43b3d30919f6"),
                            Name = "Chemicals"
                        },
                        new
                        {
                            Id = new Guid("e45fc5b0-8fc5-417e-8dae-393599bcd878"),
                            Name = "Communications"
                        },
                        new
                        {
                            Id = new Guid("4b592d92-ee86-4159-b6c1-ef9070fd4bf9"),
                            Name = "Construction"
                        },
                        new
                        {
                            Id = new Guid("4b349b9e-5e2b-4ac9-a129-c5f44ed1e8e1"),
                            Name = "Consulting"
                        },
                        new
                        {
                            Id = new Guid("786cb70b-37c3-463e-9ba1-3eec9f7aaac6"),
                            Name = "Education"
                        },
                        new
                        {
                            Id = new Guid("a0e55bbc-3d4c-4858-9cfd-8823e5632660"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("2ede8dc1-fdd0-4ce3-aa58-426fc0ca6163"),
                            Name = "Energy"
                        },
                        new
                        {
                            Id = new Guid("90393ddc-d71e-474f-8cfb-42fd7815e4cd"),
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = new Guid("60d9f8bd-6bdb-4670-9293-39ab260fb624"),
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = new Guid("cce72c7e-5292-4ea7-b3be-c58b333f1d29"),
                            Name = "Environmental"
                        },
                        new
                        {
                            Id = new Guid("8baee2ab-6a59-4a90-87d5-6567c47fbbc6"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("567e46bf-a866-403d-93e8-aa9f6c275315"),
                            Name = "Food & Beverage"
                        },
                        new
                        {
                            Id = new Guid("4e8bba07-90c9-43eb-8c11-c554d29a778f"),
                            Name = "Government"
                        },
                        new
                        {
                            Id = new Guid("aaaabe50-7ef4-4c1e-b7cb-b0f55a293c86"),
                            Name = "Healthcare"
                        },
                        new
                        {
                            Id = new Guid("2c46fb91-5cb0-4f2a-9e8a-22ea5c3cec21"),
                            Name = "Hospitality"
                        },
                        new
                        {
                            Id = new Guid("1dcafffb-ca9d-4f9b-93ca-e536e410559c"),
                            Name = "Insurance"
                        },
                        new
                        {
                            Id = new Guid("a565bf5a-3d33-43ad-a226-120457b85191"),
                            Name = "Machinery"
                        },
                        new
                        {
                            Id = new Guid("35687527-94bd-48da-bdb4-ad1e097f2a49"),
                            Name = "Manufacturing"
                        },
                        new
                        {
                            Id = new Guid("562ee5b5-5138-4dfd-aa99-9b81d207d4b0"),
                            Name = "Media"
                        },
                        new
                        {
                            Id = new Guid("08985c5f-1af8-4c8e-afa8-26f4f41da415"),
                            Name = "Not for Profit"
                        },
                        new
                        {
                            Id = new Guid("ab97f49c-e20f-4370-a17d-9edcd2f032e2"),
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("174f6c87-85f6-4228-b9ff-f8376d8625e7"),
                            Name = "Recreation"
                        },
                        new
                        {
                            Id = new Guid("559f9a42-0028-4086-9975-d4c98ffedefc"),
                            Name = "Retail"
                        },
                        new
                        {
                            Id = new Guid("dd9eac8e-5065-4433-8940-c62e65acaedb"),
                            Name = "Shipping"
                        },
                        new
                        {
                            Id = new Guid("a2aada59-1892-4869-924d-501e32a9f9fb"),
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("68b53c92-b654-464d-a9c1-69da28415b8f"),
                            Name = "Telecommunication"
                        },
                        new
                        {
                            Id = new Guid("aa157e9f-726b-4bc0-92d4-1f1c5cb24411"),
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = new Guid("c70d131f-5a37-4b7d-8e9f-fb721d653f47"),
                            Name = "Utilities"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Lead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("EmailAddress", true);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LeadOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeadStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalutationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LeadOwnerId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LeadStatusId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("RatingId");

                    b.HasIndex("SalutationId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.LeadSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LeadSources");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81586174-364b-4a16-9120-b6fb1f5b2d72"),
                            Name = "Advertisement"
                        },
                        new
                        {
                            Id = new Guid("c59b01a7-15b6-4996-a985-464443d85e3f"),
                            Name = "Employee Referral"
                        },
                        new
                        {
                            Id = new Guid("c900558c-10b3-48c0-a851-87cdb2aa498a"),
                            Name = "External Referral"
                        },
                        new
                        {
                            Id = new Guid("c79952a4-7d14-43ea-9cff-beae267bb977"),
                            Name = "In-Store"
                        },
                        new
                        {
                            Id = new Guid("020021a7-0bc4-49cc-a1b9-e69c1d788eab"),
                            Name = "On Site"
                        },
                        new
                        {
                            Id = new Guid("c39b47ee-21f7-452d-be50-cb21b63553a5"),
                            Name = "Social"
                        },
                        new
                        {
                            Id = new Guid("c72179dd-2b62-4e46-aad5-3d8edf8ca6fd"),
                            Name = "Trade Show"
                        },
                        new
                        {
                            Id = new Guid("52bf102b-349f-4d8c-b2bd-fd1130def575"),
                            Name = "Web"
                        },
                        new
                        {
                            Id = new Guid("7880018d-9bfb-48a0-a0f9-d59b9e7cd606"),
                            Name = "Word of mouth"
                        },
                        new
                        {
                            Id = new Guid("7de4c411-36df-4872-bd54-361051d3d00c"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.LeadStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("LeadStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5758f85-8aa9-49ce-90bf-ed58022ff2b3"),
                            Name = "New"
                        },
                        new
                        {
                            Id = new Guid("64e116c6-b3fc-463b-9394-ec7026556e7b"),
                            Name = "Contacted"
                        },
                        new
                        {
                            Id = new Guid("7282ff08-ba41-4824-8ff4-6cb8cfae3ced"),
                            Name = "Working"
                        },
                        new
                        {
                            Id = new Guid("bab05c95-b176-4f17-8e2d-42ac73f31b3f"),
                            Name = "Qualified"
                        },
                        new
                        {
                            Id = new Guid("02a5032d-a84f-4727-a471-af73d79b3ae2"),
                            Name = "Unqualified"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a0c748f-b476-4c58-beb7-8993ee56b876"),
                            Name = "Hot"
                        },
                        new
                        {
                            Id = new Guid("6d630030-6c69-4f1c-b78a-fc2d9e07da88"),
                            Name = "Warm"
                        },
                        new
                        {
                            Id = new Guid("d69d5b9d-539e-4aa3-bc64-d6dc5063f1bf"),
                            Name = "Cold"
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Salutation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Salutations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("887e9f41-fe56-4485-8e01-3dc72df910e6"),
                            Name = "Mr."
                        },
                        new
                        {
                            Id = new Guid("0710caf3-3415-46a9-bcf0-09cf84114c13"),
                            Name = "Ms."
                        },
                        new
                        {
                            Id = new Guid("791d028b-b9ab-4eaa-ab5f-e44e41672e42"),
                            Name = "Mrs."
                        },
                        new
                        {
                            Id = new Guid("2f6aca92-301e-4863-9d1b-17b7303fb981"),
                            Name = "Dr."
                        },
                        new
                        {
                            Id = new Guid("d0733263-d48f-4a10-a72d-e9b9065a52c3"),
                            Name = "Prof."
                        },
                        new
                        {
                            Id = new Guid("d16cec58-e05c-408b-af7b-bf9775bbc073"),
                            Name = "Mx."
                        });
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.Lead", b =>
                {
                    b.HasOne("RoesteCrmServer.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", null)
                        .WithMany("Leads")
                        .HasForeignKey("AppUserId");

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "LeadOwner")
                        .WithMany()
                        .HasForeignKey("LeadOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.LeadSource", "LeadSource")
                        .WithMany()
                        .HasForeignKey("LeadSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.LeadStatus", "LeadStatus")
                        .WithMany()
                        .HasForeignKey("LeadStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.AppUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoesteCrmServer.Domain.Entities.Salutation", "Salutation")
                        .WithMany()
                        .HasForeignKey("SalutationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CreatedBy");

                    b.Navigation("Industry");

                    b.Navigation("LeadOwner");

                    b.Navigation("LeadSource");

                    b.Navigation("LeadStatus");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Rating");

                    b.Navigation("Salutation");
                });

            modelBuilder.Entity("RoesteCrmServer.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Leads");
                });
#pragma warning restore 612, 618
        }
    }
}
